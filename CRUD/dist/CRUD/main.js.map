{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/create-user/create-user.component.html","webpack:///./src/app/create-user/create-user.component.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/delete-user/delete-user.component.html","webpack:///./src/app/delete-user/delete-user.component.ts","webpack:///./src/app/get-user/get-user.component.html","webpack:///./src/app/get-user/get-user.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/user-data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { GetUserComponent } from './get-user/get-user.component';\nimport { createComponent } from '@angular/compiler/src/core';\nimport { CreateUserComponent } from './create-user/create-user.component';\nimport { DeleteUserComponent } from './delete-user/delete-user.component';\n\nconst routes: Routes = [\n  {path: 'home', component: HomeComponent},\n  {path: '', redirectTo: 'home', pathMatch: 'full'},\n  {path: 'user', component: GetUserComponent},\n  {path: 'create', component: CreateUserComponent},\n  {path: 'delete', component: DeleteUserComponent}\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div align='center' style=\\\"color: white; background-color: tomato\\\"><article><header><h2>Welcome</h2></header></article></div>\\n\\n\\n<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'CRUD';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {InMemoryWebApiModule} from 'angular-in-memory-web-api';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UserData } from './user-data.service';\n\nimport { from } from 'rxjs';\nimport { HomeComponent } from './home/home.component';\nimport { GetUserComponent } from './get-user/get-user.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { CreateUserComponent } from './create-user/create-user.component';\nimport { DeleteUserComponent } from './delete-user/delete-user.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    GetUserComponent,\n    CreateUserComponent,\n    DeleteUserComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule, InMemoryWebApiModule.forRoot(UserData), HttpClientModule, FormsModule, ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<button class=\\\"btn btn-danger\\\" [routerLink]=\\\"['/home']\\\" routerLinkActive=\\\"router-link-active\\\" > Home</button>\\n<br/>\\n<h2>Create User</h2>\\n\\n <form [formGroup]='userFormGroup' (ngSubmit)='addUser()'  novalidate >\\n  <input class= \\\"form-control\\\" type=\\\"text\\\" formControlName='name' placeholder=\\\"Enter Name\\\"   />\\n  <input class= \\\"form-control\\\" type=\\\"text\\\" formControlName='model' placeholder=\\\"Enter Model\\\"   />\\n\\n  <button class= 'btn btn-info'>Add User</button></form>\\n\\n  <br><br>\\n  <table class =\\\"table table-striped table-responsive\\\">\\n    <tr *ngFor=\\\"let u of users\\\">\\n      <td>\\n        {{u.id}}\\n      </td>\\n      <td>\\n        {{u.name}}\\n      </td>\\n      <td>\\n        {{u.model}}\\n      </td>\\n\\n    </tr>\\n  </table>\\n\\n  \\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { User } from '../user-data';\nimport { DataService } from '../data.service';\nimport { UserFetch } from '../user-fetch';\n\n@Component({\n  selector: 'app-create-user',\n  templateUrl: './create-user.component.html'\n})\nexport class CreateUserComponent implements OnInit {\n  userFormGroup: FormGroup;\n  users: User[];\n  user: UserFetch;\n\n  constructor(private dataservice: DataService){}\n  getUsers(){\n    this.dataservice.getUsers().subscribe(data => {\n      this.users = data;\n    });\n  }\n  ngOnInit() {\n    this.userFormGroup = new FormGroup(\n      {\n        name : new FormControl(''),\n        model : new FormControl('')\n      },\n    );\n    this.getUsers();\n}\n\n\naddUser() {\n  this.dataservice.addUser(this.userFormGroup.value).subscribe(data => {\n    this.user = data;\n    console.log(this.user);\n  });\n  this.getUsers();\n}\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport { tap, catchError, map } from 'rxjs/operators';\nimport { UserData } from './user-data.service';\nimport { User } from './user-data';\nimport { UserFetch } from './user-fetch';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  apiurl = 'api/users';                 // Our created Data can be accessed here at api/users\n  headers = new HttpHeaders().set('Content-Type', 'application/json').set('Accept', 'application/json');\n  httpOptions = {\n    headers: this.headers\n  };\n\n  constructor(private http: HttpClient) { }                     //Injecting HTTP service to communicate with the data\n\n  private handleError(error: any) {\n    console.error(error);                                       //Created a function to handle and log errors, in case\n    return throwError(error);\n  }\n  getUsers(): Observable<User[]> {\n    return this.http.get<User[]>(this.apiurl).pipe(\n      tap(data => console.log(data)),\n      catchError(this.handleError)\n    );\n  }\n  getUser(id: number): Observable<UserFetch> {\n    const url = `${this.apiurl}/${id}`;\n    return this.http.get<UserFetch>(url).pipe(\n    catchError(this.handleError)\n    );\n    }\n\n    addUser (user: UserFetch): Observable<UserFetch> {\n      user.id=null;\n      return this.http.post<UserFetch>(this.apiurl, user, this.httpOptions).pipe(\n        tap(data => console.log(data)),\n        catchError(this.handleError)\n      );\n  }\n\n  deleteUser(id: number): Observable<UserFetch> {\n    const url = `${this.apiurl}/${id}`;\n    return this.http.delete<UserFetch>(url, this.httpOptions).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  updateUser(user: UserFetch): Observable<UserFetch>{\n    const url = `${this.apiurl}/${user.id}`;\n    return this.http.put<UserFetch>(this.apiurl, user, this.httpOptions).pipe(\n      map(() => user),\n      catchError(this.handleError)\n    );\n  }\n}\n","module.exports = \"\\n\\n<button class=\\\"btn btn-danger\\\" [routerLink]=\\\"['/home']\\\" routerLinkActive=\\\"router-link-active\\\" > Home</button>\\n<br/>\\n<br><br>\\n\\n<table class =\\\"table table-striped table-responsive\\\">\\n  <tr *ngFor=\\\"let u of users\\\">\\n    <td>\\n      {{u.id}}\\n    </td>\\n    <td>\\n      {{u.name}}\\n    </td>\\n    <td>\\n      {{u.model}}\\n    </td>\\n\\n  </tr>\\n</table>\\n\\n<input class= \\\"form-control\\\" type=\\\"number\\\" [(ngModel)]='idtodelete' placeholder=\\\"Enter Id to delete User\\\" />\\n\\n<button class= 'btn btn-info' (click)='deleteUser()'>Delete User </button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { User } from '../user-data';\nimport { UserFetch } from '../user-fetch';\n\n@Component({\n  selector: 'app-delete-user',\n  templateUrl: './delete-user.component.html'\n})\nexport class DeleteUserComponent implements OnInit {\n  users: User[];\n  user: UserFetch;\n  displayData: boolean;\n\n\n  constructor(private dataservice: DataService) { }\n\n  ngOnInit() {\n    this.getUsers();\n   // this.getUser();\n    this.deleteUser();\n  }\n idtodelete=0;\n  deleteUser() {\n\n    this.dataservice.deleteUser(this.idtodelete).subscribe(data => {\n      this.getUsers();\n    });\n  }\n\n  getUsers(){\n    this.dataservice.getUsers().subscribe(data => {\n      this.users = data;\n    });\n  }\n  // fetchId=1;\n  // getUser() {\n  //   this.dataservice.getUser(this.fetchId).subscribe(data => {\n  //     this.user = data;\n  //    this.displayData=true;\n  //   });\n  // }\n}\n","module.exports = \"<button class=\\\"btn btn-danger\\\" [routerLink]=\\\"['/home']\\\" routerLinkActive=\\\"router-link-active\\\" > Home</button>\\n<br/>\\n<div align='center'><h1>List of Users</h1></div>\\n\\n\\n<table class =\\\"table table-striped\\\" >\\n  <tr *ngFor=\\\"let u of users\\\">\\n    <td>\\n      {{u.id}}\\n    </td>\\n    <td>\\n      {{u.name}}\\n    </td>\\n    <td>\\n      {{u.model}}\\n    </td>\\n\\n  </tr>\\n</table>\\n<!--\\n<input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)] = 'fetchId' placeholder=\\\"Enter User ID to fetch\\\" />\\n<button class=\\\"btn btn-info\\\" (click)= 'getUser()'>Fetch user</button> -->\\n\\n\\n<br><br>\\n\\n    <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)] = 'idtoUpdate' placeholder=\\\"Enter User ID to update\\\" />\\n    <button class=\\\"btn btn-info\\\" (click)= 'updateUser()'>Update User</button>\\n\\n    <!-- <div *ngIf=\\\"displayData\\\">\\n      <table class =\\\"table\\\">\\n          <tr >\\n            <td>\\n              {{user.id}}\\n            </td>\\n            <td>\\n              {{user.name}}\\n            </td>\\n            <td>\\n              {{user.model}}\\n            </td>\\n          </tr>\\n        </table> -->\\n\\n<br><br>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\n\nimport { User } from '../user-data';\nimport { UserFetch } from '../user-fetch';\n\n\n\n@Component({\n  selector: 'app-get-user',\n  templateUrl: './get-user.component.html'\n})\nexport class GetUserComponent implements OnInit {\n\n\n  displayData: boolean;\n  user: UserFetch;\n  users: User[] = [];\n  constructor(private dataservice: DataService){}\n  getUsers(){\n    this.dataservice.getUsers().subscribe(data => {\n      this.users = data;\n    });\n  }\n  fetchId = 0;\n\n  getUser() {\n    this.dataservice.getUser(this.fetchId).subscribe(data => {\n      this.user = data;\n     this.displayData=true;\n    });\n  }\n\n  idtoUpdate = 0;\n  updateUser() {\n    this.dataservice.getUser(this.idtoUpdate).subscribe(data => {\n      this.user = data;\n      this.user.model = 'Updated Model';\n      this.dataservice.updateUser(this.user).subscribe(data1 => {\n        this.getUsers();\n      });\n    });\n  }\n\n\n  ngOnInit() {\n    this.getUsers();\n    this.getUser();\n  }\n\n}\n","module.exports = \"<h2><a routerLink='/user'>Get Users</a></h2>\\n<h2><a routerLink='/create'>Create User</a></h2>\\n<h2><a routerLink='/delete'>Delete User</a></h2>\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { UserData } from '../user-data.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html'\n})\nexport class HomeComponent implements OnInit {\n constructor(){}\n ngOnInit(){}\n\n}\n","\r\nimport {User} from './user-data';\r\n//import { Details } from './ProductDetails';\r\nimport { InMemoryDbService } from 'angular-in-memory-web-api';\r\nimport { UserFetch } from './user-fetch';\r\n\r\n\r\nexport class UserData implements InMemoryDbService {\r\n  createDb(){\r\n    const users: User[] = [\r\n      { id: 1, name: 'Pen', model: 'v1', price: '0000000000'  },\r\n      { id: 2, name: 'Pencil', model: 'A3', price: '1111111111'  },\r\n      { id: 3, name: 'Table', model: 'N8', price: '2222222222'  },\r\n      { id: 4, name: 'Chair', model: 'M9', price : '6666666666' },\r\n      { id: 5, name: 'Bed', model: 'PZ', price: '9909999999'  }\r\n\r\n    ];\r\n    const user: UserFetch[]=[\r\n      {\r\n        id:1,\r\n        name: 'Pen',\r\n        model: 'AB'\r\n      },\r\n      {\r\n       id:2,\r\n       name: 'Pencil',\r\n       model: 'CD'\r\n     }    ,\r\n     {\r\n       id:3,\r\n       name: 'Table',\r\n       model: 'FG'\r\n     }    ,\r\n     {\r\n       id:4,\r\n       name: 'Chair',\r\n       model: 'IJ'\r\n     } ,\r\n     {\r\n       id:5,\r\n       name: 'Bed',\r\n       model: 'XZ'\r\n     }\r\n     ];\r\n\r\n    // const details: Details[]=[\r\n    //  {\r\n    //    id: 1,\r\n    //    name: 'Pen',\r\n    //    model: 'v1',\r\n    //    price: '30',\r\n    //    InStock: 'Yes'\r\n\r\n    //  },\r\n    //  {\r\n    //   id: 2,\r\n    //   name: 'Pencil',\r\n    //   model: 'A3',\r\n    //   price: '20',\r\n    //   InStock: 'Yes'\r\n    // }    ,\r\n    // {\r\n    //   id: 3,\r\n    //   name: 'Table',\r\n    //   model: 'N8',\r\n    //   price: '300',\r\n    //   InStock: 'Yes'\r\n\r\n    // }    ,\r\n    // {\r\n    //   id: 4,\r\n    //   name: 'Chair',\r\n    //   model: 'M9',\r\n    //   price: '315',\r\n    //   InStock: 'Yes'\r\n\r\n    // } ,\r\n    // {\r\n    //   id: 5,\r\n    //   name: 'Bed',\r\n    //   model: 'PZ',\r\n    //   price: '1000',\r\n    //   InStock: 'Yes'\r\n\r\n    // }\r\n    // ];\r\n    return {users, user};\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}